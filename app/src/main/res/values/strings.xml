<resources>
    //deutsch
    <string name="de_app_name">LuckyV Streamer List</string>
    <string name="de_header_favo">Favoriten</string>
    <string name="de_header_settings">Einstellungen</string>

    <string name="de_app_description_line1">Bei dieser App handelt es sich um die App-Version einer <b>bereits existierenden Internetseite</b> https://luckyv-streamer.frozenpenguin.media/ (link), welche alle Spieler auflistet, die ihr LuckyV RP auf Twitch streamen. Erstellt wurde diese Internetseite, weil die Suchfunktion auf Twitch in 99% der Fälle nicht hilfreich ist, Streamer, die aktuell Content auf LuckyV streamen, zu finden.</string>
    <string name="de_app_description_line2"><b><u>Warum dann noch eine App bauen, die genau das gleiche macht?</u></b></string>

    <string name="de_app_description_line3">Ganz einfach: Die Internetseite ist zwar sehr hilfreich und nützlich, diese ist aber leider nicht für die Nutzung eines Smartphones/Tablets konzipiert. Und deshalb nehme ich das nun selbst in die Hand.</string>

    <string name="de_suchbegriff">Suchbegriff</string>
    <string name="de_sort_button">Sortieren</string>

    //englisch
    <string name="en_app_name">LuckyV Streamer List</string>
    <string name="en_header_favo">Favorites</string>
    <string name="en_header_settings">Settings</string>

    <string name="en_app_description_line1">This app is the app version of an <b>already existing website</b> https://luckyv-streamer.frozenpenguin.media/ (link), which lists all players streaming their LuckyV RP on Twitch. This website was created because the search function on Twitch is not helpful in 99% of the cases to find streamers who are currently streaming content on LuckyV.</string>
    <string name="en_app_description_line2"><b><u>Then why build another app that does exactly the same thing?</u></b></string>

    <string name="en_app_description_line3">Quite simply, the website is very helpful and useful, but unfortunately this is not designed for smartphone/tablet use. And that\'s why I\'m now taking this into my own hands.</string>

    <string name="en_suchbegriff">Search Keyword</string>
    <string name="en_sort_button">Sort</string>

    <string name="players_live">live:</string>
    <string name="live_players_number">${players_online}</string>


    <string name="streamers_live">Streamers live</string>
    <string name="streamers_offline">Streamers offline</string>

    <string name="platzhalter">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.</string>
    <string name="favorites">Favorites</string>

    <string name="settings_de_language">Sprache</string>
    <string name="settings_de_language_deutsch">deutsch</string>
    <string name="settings_de_language_englisch">englisch</string>

    <string name="settings_en_language">Language</string>
    <string name="settings_en_language_german">german</string>
    <string name="settings_en_language_english">english</string>

    <string name="de_settings_mode">Displaymodus</string>
    <string name="en_settings_mode">Displaymode</string>
    <string name="de_settings_mode_light">hell</string>
    <string name="en_settings_mode_light">lightmode</string>
    <string name="de_settings_mode_dark">dunkel</string>
    <string name="en_settings_mode_dark">darkmode</string>

</resources>





<!--    package com.abschlussapp.majateichmann.luckyvstreamerlist.others.ui-->

<!--    import android.content.res.Configuration-->
<!--    import android.os.Bundle-->
<!--    import android.view.LayoutInflater-->
<!--    import android.view.View-->
<!--    import android.view.ViewGroup-->
<!--    import android.widget.Button-->
<!--    import android.widget.TextView-->
<!--    import androidx.appcompat.app.AppCompatDelegate-->
<!--    import androidx.core.content.ContextCompat-->
<!--    import androidx.fragment.app.Fragment-->
<!--    import com.abschlussapp.majateichmann.luckyvstreamerlist.R-->
<!--    import com.abschlussapp.majateichmann.luckyvstreamerlist.databinding.ActivityMainBinding-->
<!--    import com.abschlussapp.majateichmann.luckyvstreamerlist.databinding.FragmentSettingsBinding-->
<!--    import com.abschlussapp.majateichmann.luckyvstreamerlist.others.PreferenceManager-->
<!--    import java.util.Locale-->

<!--    class SettingsFragment : Fragment() {-->
<!--    private lateinit var binding: FragmentSettingsBinding-->

<!--    private lateinit var btnLightMode: Button-->
<!--    private lateinit var btnDarkMode: Button-->

<!--    private lateinit var btnGerman: Button-->
<!--    private lateinit var btnEnglish: Button-->

<!--    private lateinit var tvHeaderSettingsDe: String-->

<!--    private lateinit var tvHeaderSettingsEn: String-->

<!--    //settings_de_language-->
<!--    private lateinit var tvLanguageDe: String-->

<!--    //settings_en_language-->
<!--    private lateinit var tvLanguageEn: String-->

<!--    //settings_de_language_deutsch-->
<!--    private lateinit var tvDeutsch: String-->

<!--    //settings_de_language_englisch-->
<!--    private lateinit var tvEnglisch: String-->

<!--    //settings_en_language_german-->
<!--    private lateinit var tvGerman: String-->

<!--    //settings_en_language_english-->
<!--    private lateinit var tvEnglish: String-->

<!--    //de_settings_mode-->
<!--    private lateinit var tvModeDe: String-->

<!--    //en_settings_mode-->
<!--    private lateinit var tvModeEn: String-->

<!--    //de_settings_mode_light-->
<!--    private lateinit var tvModeHell: String-->

<!--    //en_settings_mode_light-->
<!--    private lateinit var tvModeLight: String-->

<!--    //de_settings_mode_dark-->
<!--    private lateinit var tvModeDunkel: String-->

<!--    //en_settings_mode_dark-->
<!--    private lateinit var tvModeDark: String-->

<!--    override fun onCreateView(-->
<!--    inflater: LayoutInflater,-->
<!--    container: ViewGroup?,-->
<!--    savedInstanceState: Bundle?-->
<!--    ): View? {-->
<!--    binding = FragmentSettingsBinding.inflate(inflater, container, false)-->
<!--    val view = binding.root-->

<!--    if (AppCompatDelegate.getDefaultNightMode() == AppCompatDelegate.MODE_NIGHT_YES) {-->
<!--    view.context.setTheme(R.style.Theme_LuckyVStreamerList_Night)-->
<!--    } else {-->
<!--    view.context.setTheme(R.style.Theme_LuckyVStreamerList_Day)-->
<!--    }-->

<!--    return view-->
<!--    }-->

<!--    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {-->
<!--    super.onViewCreated(view, savedInstanceState)-->

<!--    btnLightMode = view.findViewById(R.id.btn_lightmode)-->
<!--    btnDarkMode = view.findViewById(R.id.btn_darkmode)-->

<!--    tvHeaderSettingsDe = resources.getString(R.string.de_header_settings)-->
<!--    tvLanguageDe = resources.getString(R.string.settings_de_language)-->
<!--    tvDeutsch = resources.getString(R.string.settings_de_language_deutsch)-->
<!--    tvEnglisch = resources.getString(R.string.settings_de_language_englisch)-->
<!--    tvModeDe = resources.getString(R.string.de_settings_mode)-->
<!--    tvModeHell = resources.getString(R.string.de_settings_mode_light)-->
<!--    tvModeDunkel = resources.getString(R.string.de_settings_mode_dark)-->

<!--    tvHeaderSettingsEn = resources.getString(R.string.en_header_settings)-->
<!--    tvLanguageEn = resources.getString(R.string.settings_en_language)-->
<!--    tvGerman = resources.getString(R.string.settings_en_language_german)-->
<!--    tvEnglish = resources.getString(R.string.settings_en_language_english)-->
<!--    tvModeEn = resources.getString(R.string.en_settings_mode)-->
<!--    tvModeLight = resources.getString(R.string.en_settings_mode_light)-->
<!--    tvModeDark = resources.getString(R.string.en_settings_mode_dark)-->

<!--    // Button click listeners-->
<!--    btnLightMode.setOnClickListener {-->
<!--    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_NO)-->
<!--    }-->
<!--    btnDarkMode.setOnClickListener {-->
<!--    AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES)-->
<!--    }-->

<!--    if (AppCompatDelegate.getDefaultNightMode() == AppCompatDelegate.MODE_NIGHT_YES) {-->
<!--    // Dark Mode aktiviert-->
<!--    binding.tvHeader.setTextColor(-->
<!--    ContextCompat.getColor(requireContext(), R.color.night_txt_luckyv_white)-->
<!--    )-->
<!--    binding.tvDisplayModus.setTextColor(-->
<!--    ContextCompat.getColor(requireContext(), R.color.night_txt_luckyv_white)-->
<!--    )-->
<!--    binding.tvLanguage.setTextColor(-->
<!--    ContextCompat.getColor(requireContext(), R.color.night_txt_luckyv_white)-->
<!--    )-->
<!--    } else {-->
<!--    // Light Mode aktiviert-->
<!--    binding.tvHeader.setTextColor(-->
<!--    ContextCompat.getColor(requireContext(), R.color.day_txt_luckyv_black)-->
<!--    )-->
<!--    binding.tvDisplayModus.setTextColor(-->
<!--    ContextCompat.getColor(requireContext(), R.color.day_txt_luckyv_black)-->
<!--    )-->
<!--    binding.tvLanguage.setTextColor(-->
<!--    ContextCompat.getColor(requireContext(), R.color.day_txt_luckyv_black)-->
<!--    )-->
<!--    }-->

<!--    btnGerman = view.findViewById(R.id.btn_german)-->
<!--    btnEnglish = view.findViewById(R.id.btn_english)-->

<!--    btnGerman.setOnClickListener {-->
<!--    binding.tvHeader.text = tvHeaderSettingsDe-->
<!--    binding.tvDisplayModus.text = tvModeDe-->
<!--    binding.btnLightmode.text = tvModeHell-->
<!--    binding.btnDarkmode.text = tvModeDunkel-->
<!--    binding.tvLanguage.text = tvLanguageDe-->
<!--    binding.btnGerman.text = tvDeutsch-->
<!--    binding.btnEnglish.text = tvEnglisch-->

<!--    saveLanguagePreference("de")-->
<!--    updateAppLanguage("de")-->
<!--    }-->

<!--    btnEnglish.setOnClickListener {-->
<!--    binding.tvHeader.text = tvHeaderSettingsEn-->
<!--    binding.tvDisplayModus.text = tvModeEn-->
<!--    binding.btnLightmode.text = tvModeLight-->
<!--    binding.btnDarkmode.text = tvModeDark-->
<!--    binding.tvLanguage.text = tvLanguageEn-->
<!--    binding.btnGerman.text = tvGerman-->
<!--    binding.btnEnglish.text = tvEnglish-->


<!--    saveLanguagePreference("en")-->
<!--    updateAppLanguage("en")-->
<!--    }-->
<!--    }-->

<!--    private fun saveLanguagePreference(language: String) {-->
<!--    PreferenceManager.setLanguagePreference(requireContext(), language)-->
<!--    }-->

<!--    private fun updateAppLanguage(language: String) {-->
<!--    // Aktualisiere die Sprache der Textfelder in der gesamten App basierend auf der Spracheinstellung-->
<!--    val newLocale = Locale(language)-->
<!--    Locale.setDefault(newLocale)-->

<!--    val configuration = Configuration()-->
<!--    configuration.setLocale(newLocale)-->

<!--    requireContext().resources.updateConfiguration(-->
<!--    configuration,-->
<!--    requireContext().resources.displayMetrics-->
<!--    )-->

<!--    // Aktualisiere die Textfelder in HomeFragment-->
<!--    val homeFragment =-->
<!--    requireActivity().supportFragmentManager.findFragmentById(R.id.homeFragment) as HomeFragment?-->
<!--    homeFragment?.updateLanguage()-->

<!--    // Aktualisiere die Textfelder in SettingsFragment (dieses Fragment)-->
<!--    updateLanguage()-->
<!--    }-->


<!--    private fun updateLanguage() {-->
<!--    // Aktualisiere die Textfelder in diesem Fragment (SettingsFragment)-->
<!--    val language = PreferenceManager.getLanguagePreference(requireContext())-->

<!--    val headerTextView = requireView().findViewById<TextView>(R.id.tv_header)-->
<!--val displayModusTextView = requireView().findViewById<TextView>(R.id.tv_displayModus)-->
<!--    val languageTextView = requireView().findViewById<TextView>(R.id.tv_language)-->

<!--        if (language == "en") {-->
<!--        headerTextView.text = getString(R.string.en_header_settings)-->
<!--        displayModusTextView.text = getString(R.string.en_settings_mode)-->
<!--        languageTextView.text = getString(R.string.settings_en_language)-->
<!--        } else {-->
<!--        headerTextView.text = getString(R.string.de_header_settings)-->
<!--        displayModusTextView.text = getString(R.string.de_settings_mode)-->
<!--        languageTextView.text = getString(R.string.settings_de_language)-->
<!--        }-->
<!--        }-->
<!--        }-->